{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/comments.js","reducers/auth.js","actions/index.js","components/CommentBox.js","components/CommentList.js","components/App.js","index.js","Root.js"],"names":["SAVE_COMMENT","FETCH_COMMENTS","CHANGE_AUTH","combineReducers","comments","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","data","map","comment","name","auth","saveComment","fetchComments","response","axios","get","changeAuth","isLoggedIn","CommentBox","handleChange","event","_this","setState","target","value","handleSubmit","preventDefault","react_default","a","createElement","onSubmit","this","onChange","className","onClick","props","Component","connect","actions","CommentList","key","renderComments","App","Link","to","renderButton","Route","path","component","exact","ReactDOM","render","_ref","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","reduxPromise","es","BrowserRouter","document","querySelector"],"mappings":"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","file":"static/js/main.13c14039.chunk.js","sourcesContent":["export const SAVE_COMMENT = 'save_comment';\r\nexport const FETCH_COMMENTS = 'fetch_comments';\r\nexport const CHANGE_AUTH = 'change_auth';","import { combineReducers } from 'redux';\r\nimport commentsReducer from 'reducers/comments';\r\nimport authReducer from 'reducers/auth';\r\n\r\nexport default combineReducers({\r\n    comments: commentsReducer,\r\n    auth: authReducer \r\n});","import { SAVE_COMMENT, FETCH_COMMENTS } from 'actions/types';\r\n\r\nexport default function(state = [], action ) {\r\n    switch(action.type){\r\n        case SAVE_COMMENT:\r\n            return [...state, action.payload];\r\n        case FETCH_COMMENTS:\r\n            const comments = action.payload.data.map(comment => comment.name);\r\n            return [...state, ...comments]; \r\n        default:\r\n            return state;\r\n    }\r\n}","import { CHANGE_AUTH } from 'actions/types';\r\n\r\nexport default function(state = false, action) {\r\n    switch(action.type) {\r\n        case CHANGE_AUTH:\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\nimport { SAVE_COMMENT, FETCH_COMMENTS, CHANGE_AUTH } from 'actions/types';\r\n\r\nexport function saveComment(comment) {\r\n    return {\r\n        type: SAVE_COMMENT,\r\n        payload: comment\r\n    };\r\n}\r\n\r\nexport function fetchComments(comment) {\r\n    const response = axios.get('http://jsonplaceholder.typicode.com/comments');\r\n    return {\r\n        type: FETCH_COMMENTS,\r\n        payload: response\r\n    };\r\n}\r\n\r\nexport function changeAuth(isLoggedIn) {\r\n    return {\r\n        type: CHANGE_AUTH,\r\n        payload: isLoggedIn\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from 'actions';\r\n\r\nclass CommentBox extends Component {\r\n    state = { comment: ''};\r\n\r\n    handleChange = event => {\r\n        this.setState({ comment: event.target.value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ comment: '' });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} >\r\n                <h4>Add a Comment</h4>\r\n                <textarea onChange={this.handleChange} value={this.state.comment} />\r\n                <div>\r\n                <button>Submit comment</button>\r\n                </div>\r\n            </form>\r\n                <button className=\"fetch-comments\" onClick={this.props.fetchComments}>Fetch Comments</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(CommentBox);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CommentList extends Component {\r\n    renderComments() {\r\n        return this.props.comments.map(comment => {\r\n            return <li key={comment}>{comment}</li>;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Comment List</h4>\r\n                <ul>\r\n                    {this.renderComments()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { comments: state.comments }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CommentList);","import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport CommentBox from './CommentBox';\r\nimport CommentList from './CommentList';\r\n\r\nclass App extends Component {\r\n    renderButton() {\r\n        if (this.props.auth) { \r\n            return (\r\n                <button>\r\n                    Sign Out\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button>\r\n                    Sign In\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n    renderHeader() {\r\n        return (\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    {this.renderButton()}\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Route path=\"/post\" component={CommentBox} />\r\n                <Route path=\"/\" exact component={CommentList} />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return { auth: state.auth };\r\n}\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Root from 'Root';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <BrowserRouter>\r\n            <Route path=\"/\" component={App} />\r\n        </BrowserRouter>\r\n    </Root>,\r\n    document.querySelector('#root')\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxPromise from 'redux-promise';\r\nimport reducers from 'reducers';\r\n\r\nexport default ({ children, initialState = {}}) => {\r\n    const store = createStore(\r\n        reducers, \r\n        initialState, \r\n        applyMiddleware(reduxPromise)\r\n        );\r\n    return (\r\n        <Provider store={store} >\r\n            {children}\r\n        </Provider>\r\n    );\r\n};\r\n"],"sourceRoot":""}